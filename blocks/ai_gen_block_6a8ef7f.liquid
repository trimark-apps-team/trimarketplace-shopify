{% doc %}
  @prompt
    Quick reorder
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-quick-reorder-{{ ai_gen_id }} {
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    max-width: 100%;
  }

  .ai-quick-reorder-header-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
    margin-bottom: 24px;
  }

  .ai-quick-reorder-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 8px;
    font-weight: 600;
  }

  .ai-quick-reorder-subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
    margin: 0;
  }

  .ai-quick-reorder-products-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
    margin-bottom: 24px;
  }

  .ai-quick-reorder-product-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 16px;
    padding: 16px;
    background-color: {{ block.settings.product_card_bg }};
    border: 1px solid {{ block.settings.product_card_border }};
    border-radius: {{ block.settings.product_card_radius }}px;
    transition: all 0.3s ease;
  }

  .ai-quick-reorder-product-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .ai-quick-reorder-product-image-{{ ai_gen_id }} {
    width: 60px;
    height: 60px;
    flex-shrink: 0;
    border-radius: 8px;
    overflow: hidden;
  }

  .ai-quick-reorder-product-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-quick-reorder-product-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-quick-reorder-product-placeholder-{{ ai_gen_id }} svg {
    width: 30px;
    height: 30px;
    opacity: 0.5;
  }

  .ai-quick-reorder-product-info-{{ ai_gen_id }} {
    flex-grow: 1;
    min-width: 0;
  }

  .ai-quick-reorder-product-title-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0 0 4px;
    line-height: 1.3;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .ai-quick-reorder-product-price-{{ ai_gen_id }} {
    font-size: 14px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
    margin: 0 0 8px;
  }

  .ai-quick-reorder-product-date-{{ ai_gen_id }} {
    font-size: 12px;
    color: {{ block.settings.text_color }};
    opacity: 0.6;
    margin: 0;
  }

  .ai-quick-reorder-product-actions-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 8px;
    align-items: flex-end;
  }

  .ai-quick-reorder-quantity-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
  }

  .ai-quick-reorder-quantity-label-{{ ai_gen_id }} {
    font-size: 12px;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
  }

  .ai-quick-reorder-quantity-input-{{ ai_gen_id }} {
    width: 50px;
    padding: 4px 8px;
    border: 1px solid {{ block.settings.product_card_border }};
    border-radius: 4px;
    text-align: center;
    font-size: 14px;
  }

  .ai-quick-reorder-add-btn-{{ ai_gen_id }} {
    padding: 8px 16px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: {{ block.settings.button_radius }}px;
    font-size: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    white-space: nowrap;
  }

  .ai-quick-reorder-add-btn-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-1px);
  }

  .ai-quick-reorder-add-btn-{{ ai_gen_id }}:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .ai-quick-reorder-empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ block.settings.text_color }};
    opacity: 0.7;
  }

  .ai-quick-reorder-empty-icon-{{ ai_gen_id }} {
    width: 60px;
    height: 60px;
    margin: 0 auto 16px;
    opacity: 0.5;
  }

  .ai-quick-reorder-login-prompt-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
  }

  .ai-quick-reorder-login-btn-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_radius }}px;
    font-weight: 600;
    margin-top: 16px;
    transition: all 0.3s ease;
  }

  .ai-quick-reorder-login-btn-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-1px);
  }

  .ai-quick-reorder-success-{{ ai_gen_id }} {
    position: fixed;
    top: 20px;
    right: 20px;
    background-color: #10b981;
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 600;
    z-index: 1000;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.3s ease;
  }

  .ai-quick-reorder-success-{{ ai_gen_id }}.show {
    opacity: 1;
    transform: translateX(0);
  }

  @media screen and (max-width: 749px) {
    .ai-quick-reorder-products-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
    }

    .ai-quick-reorder-product-{{ ai_gen_id }} {
      flex-direction: column;
      text-align: center;
      gap: 12px;
    }

    .ai-quick-reorder-product-actions-{{ ai_gen_id }} {
      align-items: center;
      flex-direction: row;
      justify-content: space-between;
      width: 100%;
    }
  }
{% endstyle %}

<quick-reorder-{{ ai_gen_id }}
  class="ai-quick-reorder-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-quick-reorder-header-{{ ai_gen_id }}">
    {% if block.settings.title != blank %}
      <h2 class="ai-quick-reorder-title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
    {% endif %}
    {% if block.settings.subtitle != blank %}
      <p class="ai-quick-reorder-subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
    {% endif %}
  </div>

  {% if customer %}
    <div class="ai-quick-reorder-products-{{ ai_gen_id }}" id="ai-quick-reorder-products-{{ ai_gen_id }}">
      {% assign recent_orders = customer.orders | where: 'financial_status', 'paid' | sort: 'created_at' | reverse %}
      {% assign displayed_products = '' %}
      {% assign product_count = 0 %}

      {% for order in recent_orders %}
        {% if product_count >= block.settings.max_products %}
          {% break %}
        {% endif %}
        
        {% for line_item in order.line_items %}
          {% if product_count >= block.settings.max_products %}
            {% break %}
          {% endif %}
          
          {% unless displayed_products contains line_item.product_id %}
            {% assign displayed_products = displayed_products | append: line_item.product_id | append: ',' %}
            {% assign product_count = product_count | plus: 1 %}
            
            <div class="ai-quick-reorder-product-{{ ai_gen_id }}" data-product-id="{{ line_item.product_id }}" data-variant-id="{{ line_item.variant_id }}">
              <div class="ai-quick-reorder-product-image-{{ ai_gen_id }}">
                {% if line_item.image %}
                  <img
                    src="{{ line_item.image | image_url: width: 120 }}"
                    alt="{{ line_item.image.alt | escape }}"
                    width="120"
                    height="120"
                    loading="lazy"
                  >
                {% else %}
                  <div class="ai-quick-reorder-product-placeholder-{{ ai_gen_id }}">
                    {{ 'product-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>

              <div class="ai-quick-reorder-product-info-{{ ai_gen_id }}">
                <h3 class="ai-quick-reorder-product-title-{{ ai_gen_id }}">{{ line_item.product.title }}</h3>
                {% if line_item.variant.title != 'Default Title' %}
                  <p class="ai-quick-reorder-product-variant-{{ ai_gen_id }}">{{ line_item.variant.title }}</p>
                {% endif %}
                <p class="ai-quick-reorder-product-price-{{ ai_gen_id }}">{{ line_item.price | money }}</p>
                <p class="ai-quick-reorder-product-date-{{ ai_gen_id }}">Last ordered: {{ order.created_at | date: '%b %d, %Y' }}</p>
              </div>

              <div class="ai-quick-reorder-product-actions-{{ ai_gen_id }}">
                <div class="ai-quick-reorder-quantity-{{ ai_gen_id }}">
                  <label class="ai-quick-reorder-quantity-label-{{ ai_gen_id }}" for="qty-{{ line_item.variant_id }}">Qty:</label>
                  <input
                    type="number"
                    id="qty-{{ line_item.variant_id }}"
                    class="ai-quick-reorder-quantity-input-{{ ai_gen_id }}"
                    value="{{ line_item.quantity }}"
                    min="1"
                    max="10"
                  >
                </div>
                <button
                  class="ai-quick-reorder-add-btn-{{ ai_gen_id }}"
                  data-variant-id="{{ line_item.variant_id }}"
                  data-product-title="{{ line_item.product.title | escape }}"
                >
                  Add to Cart
                </button>
              </div>
            </div>
          {% endunless %}
        {% endfor %}
      {% endfor %}

      {% if product_count == 0 %}
        <div class="ai-quick-reorder-empty-{{ ai_gen_id }}">
          <div class="ai-quick-reorder-empty-icon-{{ ai_gen_id }}">
            {{ 'product-1' | placeholder_svg_tag }}
          </div>
          <p>No previous orders found. Start shopping to see your reorder options here!</p>
        </div>
      {% endif %}
    </div>
  {% else %}
    <div class="ai-quick-reorder-login-prompt-{{ ai_gen_id }}">
      <p style="color: {{ block.settings.text_color }}; margin: 0 0 16px;">Please log in to view your previous orders and quick reorder options.</p>
      <a href="{{ routes.account_login_url }}" class="ai-quick-reorder-login-btn-{{ ai_gen_id }}">
        Log In
      </a>
    </div>
  {% endif %}

  <div class="ai-quick-reorder-success-{{ ai_gen_id }}" id="ai-quick-reorder-success-{{ ai_gen_id }}">
    Product added to cart!
  </div>
</quick-reorder-{{ ai_gen_id }}>

<script>
  (function() {
    class QuickReorder{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.addButtons = this.querySelectorAll('.ai-quick-reorder-add-btn-{{ ai_gen_id }}');
        this.successMessage = this.querySelector('#ai-quick-reorder-success-{{ ai_gen_id }}');
      }

      connectedCallback() {
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.addButtons.forEach(button => {
          button.addEventListener('click', this.handleAddToCart.bind(this));
        });
      }

      async handleAddToCart(event) {
        const button = event.target;
        const variantId = button.dataset.variantId;
        const productTitle = button.dataset.productTitle;
        const quantityInput = button.closest('.ai-quick-reorder-product-{{ ai_gen_id }}').querySelector('.ai-quick-reorder-quantity-input-{{ ai_gen_id }}');
        const quantity = parseInt(quantityInput.value) || 1;

        button.disabled = true;
        button.textContent = 'Adding...';

        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              id: variantId,
              quantity: quantity
            })
          });

          if (response.ok) {
            this.showSuccessMessage(`${productTitle} added to cart!`);
            
            // Update cart count if cart drawer exists
            if (window.theme && window.theme.cart) {
              window.theme.cart.updateCartCount();
            }
            
            // Trigger cart drawer open if it exists
            const cartDrawer = document.querySelector('cart-drawer');
            if (cartDrawer && cartDrawer.open) {
              cartDrawer.open();
            }
            
            // Dispatch custom event for other cart integrations
            document.dispatchEvent(new CustomEvent('cart:item-added', {
              detail: { variantId, quantity, productTitle }
            }));
          } else {
            throw new Error('Failed to add to cart');
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
          this.showSuccessMessage('Error adding to cart. Please try again.', true);
        } finally {
          button.disabled = false;
          button.textContent = 'Add to Cart';
        }
      }

      showSuccessMessage(message, isError = false) {
        this.successMessage.textContent = message;
        this.successMessage.style.backgroundColor = isError ? '#ef4444' : '#10b981';
        this.successMessage.classList.add('show');

        setTimeout(() => {
          this.successMessage.classList.remove('show');
        }, 3000);
      }
    }

    customElements.define('quick-reorder-{{ ai_gen_id }}', QuickReorder{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Quick reorder",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Quick Reorder"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Easily reorder your favorite products from previous purchases"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 3,
      "max": 12,
      "step": 1,
      "label": "Maximum products to show",
      "default": 6
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Padding",
      "default": 32
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 28
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Product cards"
    },
    {
      "type": "color",
      "id": "product_card_bg",
      "label": "Card background",
      "default": "#f9f9f9"
    },
    {
      "type": "color",
      "id": "product_card_border",
      "label": "Card border",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "product_card_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "button_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "Quick reorder"
    }
  ]
}
{% endschema %}