{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-cart-items.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}
{{ 'quantity-popover.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
 {%- capture content_for_query_string -%}{{ content_for_header }}{%- endcapture -%}
            {%- assign page_url = content_for_query_string
              | split: '"pageurl":"'
              | last
              | split: '"'
              | first -%}

           {% if page_url contains 'mergecart' or page_url contains 'replacecart' %}
              {% assign reorder_url = true %}
            {% else %}
              {% assign reorder_url = false %}
            {% endif %}

{%- unless settings.cart_type == 'drawer' -%}
  <script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
{%- endunless -%}

<script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>

<cart-items class="gradient color-{{ section.settings.color_scheme }} isolate  {% if cart == empty and reorder_url == false %} is-empty{% else %} section-{{ section.id }}-padding{% endif %}">
  <div class="page-width">
    <h1 class="title title--primary">{{ 'sections.cart.title' | t }}</h1>
    <div class="cart-item-wrapper">
      <div class="title-wrapper-with-link">
        <a href="{{ routes.all_products_collection_url }}" class="underlined-link">
          {{- 'general.continue_shopping' | t -}}
        </a>
      </div>

      <div class="cart__warnings">
        <h1 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h1>
        <a href="{{ routes.all_products_collection_url }}" class="button">
          {{ 'general.continue_shopping' | t }}
        </a>

        {%- if shop.customer_accounts_enabled and customer == null -%}
          <h2 class="cart__login-title">{{ 'sections.cart.login.title' | t }}</h2>
          <p class="cart__login-paragraph">
            {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
          </p>
        {%- endif -%}
      </div>

      <form action="{{ routes.cart_url }}" class="cart__contents critical-hidden" method="post" id="cart">
        <div class="cart__items" id="main-cart-items" data-id="{{ section.id }}">
          <div class="js-contents">

              {%- if reorder_url -%}
                  <div class="skeleton-shimmer"></div> 
              {%- endif -%}
            {%- if cart != empty -%}
              <table class="cart-items  {% if reorder_url %} hidden{% endif %}">
                <caption class="visually-hidden">
                  {{ 'sections.cart.title' | t }}
                </caption>
                <thead>
                  <tr>
                    <th class="caption-with-letter-spacing" colspan="2" scope="col">
                      {{ 'sections.cart.headings.product' | t }}
                    </th>
                    <th class="medium-hide large-up-hide right caption-with-letter-spacing" colspan="1" scope="col">
                      {{ 'sections.cart.headings.total' | t }}
                    </th>
                    <th
                      class="cart-items__heading--wide cart-items__heading--quantity small-hide caption-with-letter-spacing"
                      colspan="1"
                      scope="col"
                    >
                      {{ 'sections.cart.headings.quantity' | t }}
                    </th>
                    <th class="small-hide right caption-with-letter-spacing" colspan="1" scope="col">
                      {{ 'sections.cart.headings.total' | t }}
                    </th>
                  </tr>
                </thead>

                <tbody>
                  {%- for item in cart.items -%}
                    <tr class="cart-item" id="CartItem-{{ item.index | plus: 1 }}">
                      <td class="cart-item__media">
                        {% if item.image %}
                          {% comment %} Leave empty space due to a:empty CSS display: none rule {% endcomment %}
                          <a href="{{ item.url }}" class="cart-item__link" aria-hidden="true" tabindex="-1"> </a>
                          <div class="cart-item__image-container gradient global-media-settings">
                            <img
                              src="{{ item.image | image_url: width: 300 }}"
                              class="cart-item__image"
                              alt="{{ item.image.alt | escape }}"
                              loading="lazy"
                              width="150"
                              height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}"
                            >
                          </div>
                        {% endif %}
                      </td>

                      <td class="cart-item__details">
                        {%- if settings.show_vendor -%}
                          <p class="caption-with-letter-spacing">{{ item.product.vendor }}</p>
                        {%- endif -%}

                        <a href="{{ item.url }}" class="cart-item__name h4 break">{{ item.product.title | escape }}</a>

                        {%- if item.original_price != item.final_price -%}
                          <div class="cart-item__discounted-prices">
                            <span class="visually-hidden">
                              {{ 'products.product.price.regular_price' | t }}
                            </span>
                            <s class="cart-item__old-price product-option">
                              {{- item.original_price | money -}}
                            </s>
                            <span class="visually-hidden">
                              {{ 'products.product.price.sale_price' | t }}
                            </span>
                            <strong class="cart-item__final-price product-option">
                              {{ item.final_price | money }}
                            </strong>
                          </div>
                        {%- else -%}
                          {% if item.properties["_Tier Price"] != blank and item.properties["_Tier Price"] != "NA" %}
                                <div style="display: flex; align-items: center; gap: 6px;position: relative;">
                            <span class="cart-tier-price-text" data-line="{{ forloop.index0 }}">{{ item.properties["_Tier Price"] }}</span>
                            <input type="number" step="1" class="cart-tier-price-input" min="1" max="1000"
                                  data-line="{{ forloop.index0 }}"
                                  style="display:none; width: 80px;"
                                  value="{{ item.properties["_Tier Price"] | replace: localization.country.currency.symbol , '' }}" />
                            <button type="button" class="cart-edit-tier-price-btn" data-line="{{ forloop.index0 }}"
                                    style="background:none; border:none; cursor:pointer;">✏️</button> <p class="loading-cart" style="display:none;">Updating cart...</p>
                          </div>

                              {% else %}

                              <div class="product-option">
                                {{ item.original_price | money }}
                              </div>
                                {% endif %}
                        {%- endif -%}

                        {%- if item.product.has_only_default_variant == false
                          or item.properties.size != 0
                          or item.selling_plan_allocation != null
                        -%}
                          <dl>
                            {%- if item.product.has_only_default_variant == false -%}
                              {%- for option in item.options_with_values -%}
                                <div class="product-option">
                                  <dt>{{ option.name }}:</dt>
                                  <dd>{{ option.value }}</dd>
                                </div>
                              {%- endfor -%}
                            {%- endif -%}

                            {%- for property in item.properties -%}
                              {%- assign property_first_char = property.first | slice: 0 -%}
                              {%- if property.last != blank and property_first_char != '_' -%}
                                <div class="product-option">
                                  <dt>{{ property.first }}:</dt>
                                  <dd>
                                    {%- if property.last contains '/uploads/' -%}
                                      <a href="{{ property.last }}" class="link" target="_blank">
                                        {{ property.last | split: '/' | last }}
                                      </a>
                                    {%- else -%}
                                      {{ property.last }}
                                    {%- endif -%}
                                  </dd>
                                </div>
                              {%- endif -%}
                            {%- endfor -%}
                          </dl>

                          <p class="product-option">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                        {%- endif -%}

                        <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                          {%- for discount in item.line_level_discount_allocations -%}
                            <li class="discounts__discount">
                              {{- 'icon-discount.svg' | inline_asset_content -}}
                              {{ discount.discount_application.title | escape }}
                            </li>
                          {%- endfor -%}
                        </ul>
                      </td>

                      <td class="cart-item__totals right medium-hide large-up-hide">
                        {%- render 'loading-spinner' -%}
                        <div class="cart-item__price-wrapper">
                          {%- if item.original_line_price != item.final_line_price -%}
                            <dl class="cart-item__discounted-prices">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="cart-item__old-price price price--end">
                                  {{ item.original_line_price | money }}
                                </s>
                              </dd>
                              <dt class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </dt>
                              <dd class="price price--end">
                                {{ item.final_line_price | money }}
                              </dd>
                            </dl>
                          {%- else -%}
                            <span class="price price--end">
                              {{ item.original_line_price | money }}
                            </span>
                          {%- endif -%}

                          {%- if item.variant.available and item.unit_price_measurement -%}
                            <div class="unit-price caption">
                              <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                              {{ item.unit_price | money }}
                              <span aria-hidden="true">/</span>
                              <span class="visually-hidden"
                                >&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span
                              >
                              {%- if item.unit_price_measurement.reference_value != 1 -%}
                                {{- item.unit_price_measurement.reference_value -}}
                              {%- endif -%}
                              {{ item.unit_price_measurement.reference_unit }}
                            </div>
                          {%- endif -%}
                        </div>
                      </td>
                      {%- liquid
                        assign has_qty_rules = false
                        if item.variant.quantity_rule.increment > 1 or item.variant.quantity_rule.min > 1 or item.variant.quantity_rule.max != null
                          assign has_qty_rules = true
                        endif

                        assign has_vol_pricing = false
                        if item.variant.quantity_price_breaks.size > 0
                          assign has_vol_pricing = true
                        endif
                      -%}
                      <td class="cart-item__quantity{% if has_qty_rules or has_vol_pricing %} cart-item__quantity--info{% endif %}">
                        <quantity-popover>
                          <div class="cart-item__quantity-wrapper quantity-popover-wrapper">
                            <label class="visually-hidden" for="Quantity-{{ item.index | plus: 1 }}">
                              {{ 'products.product.quantity.label' | t }}
                            </label>
                            <div class="quantity-popover-container{% if has_qty_rules or has_vol_pricing %} quantity-popover-container--hover{% endif %}">
                              {%- if has_qty_rules or has_vol_pricing -%}
                                <button
                                  type="button"
                                  aria-expanded="false"
                                  class="quantity-popover__info-button quantity-popover__info-button--icon-only button button--tertiary small-hide medium-hide"
                                >
                                  {{- 'icon-info.svg' | inline_asset_content -}}
                                </button>
                              {%- endif -%}
                              <quantity-input class="quantity cart-quantity">
                                <button class="quantity__button" name="minus" type="button">
                                  <span class="visually-hidden">
                                    {{- 'products.product.quantity.decrease' | t: product: item.product.title | escape -}}
                                  </span>
                                  <span class="svg-wrapper">
                                    {{- 'icon-minus.svg' | inline_asset_content -}}
                                  </span>
                                </button>
                                <input
                                  class="quantity__input"
                                  data-quantity-variant-id="{{ item.variant.id }}"
                                  type="number"
                                  name="updates[]"
                                  value="{{ item.quantity }}"
                                  {% # theme-check-disable %}
                                  data-cart-quantity="{{ cart | item_count_for_variant: item.variant.id }}"
                                  min="0"
                                  data-min="{{ item.variant.quantity_rule.min }}"
                                  {% if item.variant.quantity_rule.max != null %}
                                    max="{{ item.variant.quantity_rule.max }}"
                                  {% endif %}
                                  step="{{ item.variant.quantity_rule.increment }}"
                                  {% # theme-check-enable %}
                                  aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                                  id="Quantity-{{ item.index | plus: 1 }}"
                                  data-index="{{ item.index | plus: 1 }}"
                                >
                                <button class="quantity__button" name="plus" type="button">
                                  <span class="visually-hidden">
                                    {{- 'products.product.quantity.increase' | t: product: item.product.title | escape -}}
                                  </span>
                                  <span class="svg-wrapper">
                                    {{- 'icon-plus.svg' | inline_asset_content -}}
                                  </span>
                                </button>
                              </quantity-input>
                            </div>
                            <cart-remove-button
                              id="Remove-{{ item.index | plus: 1 }}"
                              data-index="{{ item.index | plus: 1 }}"
                            >
                              <a
                                href="{{ item.url_to_remove }}"
                                class="button button--tertiary"
                                aria-label="{{ 'sections.cart.remove_title' | t: title: item.title | escape }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-remove.svg' | inline_asset_content -}}
                                </span>
                              </a>
                            </cart-remove-button>
                          </div>
                          {%- if has_qty_rules or has_vol_pricing -%}
                            <button
                              type="button"
                              class="quantity-popover__info-button quantity-popover__info-button--icon-with-label button button--tertiary large-up-hide"
                              aria-expanded="false"
                            >
                              {{- 'icon-info.svg' | inline_asset_content -}}
                              <span>
                                {%- if has_vol_pricing -%}
                                  {{ 'products.product.volume_pricing.note' | t }}
                                {%- elsif has_qty_rules -%}
                                  {{ 'products.product.quantity.note' | t }}
                                {%- endif -%}
                              </span>
                            </button>
                          {%- endif -%}
                          {%- if has_vol_pricing or has_qty_rules -%}
                            <div
                              class="cart-items__info global-settings-popup quantity-popover__info"
                              tabindex="-1"
                              hidden
                            >
                              {%- if has_qty_rules == false -%}
                                <span class="volume-pricing-label caption">
                                  {{- 'products.product.volume_pricing.title' | t -}}
                                </span>
                              {%- endif -%}
                              <div class="quantity__rules caption">
                                {%- if item.variant.quantity_rule.increment > 1 -%}
                                  <span class="divider">
                                    {{-
                                      'products.product.quantity.multiples_of'
                                      | t: quantity: item.variant.quantity_rule.increment
                                    -}}
                                  </span>
                                {%- endif -%}
                                {%- if item.variant.quantity_rule.min > 1 -%}
                                  <span class="divider">
                                    {{-
                                      'products.product.quantity.min_of'
                                      | t: quantity: item.variant.quantity_rule.min
                                    -}}
                                  </span>
                                {%- endif -%}
                                {%- if item.variant.quantity_rule.max != null -%}
                                  <span class="divider">
                                    {{-
                                      'products.product.quantity.max_of'
                                      | t: quantity: item.variant.quantity_rule.max
                                    -}}
                                  </span>
                                {%- endif -%}
                              </div>
                              <button
                                class="button-close button button--tertiary large-up-hide"
                                type="button"
                                aria-label="{{ 'accessibility.close' | t }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-close.svg' | inline_asset_content -}}
                                </span>
                              </button>
                              {%- if item.variant.quantity_price_breaks.size > 0 -%}
                                <volume-pricing class="parent-display">
                                  <ul class="list-unstyled">
                                    <li>
                                      <span>{{ item.variant.quantity_rule.min }}+</span>
                                      {%- assign price = item.variant.price | money_with_currency -%}
                                      <span> {{ 'sections.quick_order_list.each' | t: money: price }}</span>
                                    </li>
                                    {%- for price_break in item.variant.quantity_price_breaks -%}
                                      <li>
                                        <span>
                                          {{- price_break.minimum_quantity -}}
                                          <span aria-hidden="true">+</span></span
                                        >
                                        {%- assign price = price_break.price | money_with_currency -%}
                                        <span> {{ 'sections.quick_order_list.each' | t: money: price }}</span>
                                      </li>
                                    {%- endfor -%}
                                  </ul>
                                </volume-pricing>
                              {%- endif -%}
                            </div>
                          {%- endif -%}
                          
                        </quantity-popover>
                      </td>

                      <td class="cart-item__totals right small-hide">
                        {%- render 'loading-spinner' -%}
                        <div class="cart-item__price-wrapper">
                          {%- if item.original_line_price != item.final_line_price -%}
                            <dl class="cart-item__discounted-prices">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="cart-item__old-price price price--end">
                                  {{ item.original_line_price | money }}
                                </s>
                              </dd>
                              <dt class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </dt>
                              <dd class="price price--end">
                                {{ item.final_line_price | money }}
                              </dd>
                            </dl>
                          {%- else -%}
                            <span class="price price--end">
                              {{ item.original_line_price | money }}
                            </span>
                          {%- endif -%}

                          {%- if item.variant.available and item.unit_price_measurement -%}
                            <div class="unit-price caption">
                              <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                              {{ item.unit_price | money }}
                              <span aria-hidden="true">/</span>
                              <span class="visually-hidden"
                                >&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span
                              >
                              {%- if item.unit_price_measurement.reference_value != 1 -%}
                                {{- item.unit_price_measurement.reference_value -}}
                              {%- endif -%}
                              {{ item.unit_price_measurement.reference_unit }}
                            </div>
                          {%- endif -%}
                        </div>
                      </td>
                    </tr>
                  {%- endfor -%}
                </tbody>
              </table>
            {%- endif -%}
          </div>
        </div>
      
          <div>
            <a href="#" id="empty-cart-link" class="btn btn-primary empty-cart">Empty Cart</a>
                  <a class="btn btn-primary view-carts" href="/a/saved-carts">
                  View Carts
                  </a>
                  <a class="cs-save-trigger" href="/a/saved-carts/new">
                      Save Cart
                  </a>
          </div>
       

        <p class="visually-hidden" id="cart-live-region-text" aria-live="polite" role="status"></p>
        <p
          class="visually-hidden"
          id="shopping-cart-line-item-status"
          aria-live="polite"
          aria-hidden="true"
          role="status"
        >
          {{ 'accessibility.loading' | t }}
        </p>
      </form>
    </div>
  </div>
</cart-items>

{% schema %}
{
  "name": "t:sections.main-cart-items.name",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}


<script>
document.addEventListener("DOMContentLoaded", () => {
  const fetchCart = () => fetch("/cart.js").then(r => r.json());
  const clearCart = () => fetch("/cart/clear.js", { method: "POST" });
  const addToCart = (items) => fetch("/cart/add.js", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ items }),
  }).then(r => r.json());

  const renderCart = async () => {
    const res = await fetch(window.location.href);
    const html = await res.text();
    const doc = new DOMParser().parseFromString(html, "text/html");
    const newContent = doc.querySelector(".template-cart #MainContent");
    if (!newContent) return;

    const cartPage = document.querySelector(".template-cart #MainContent");
    cartPage.innerHTML = newContent.innerHTML;

    cartPage.querySelectorAll(".cart-item .loading__spinner")
      .forEach(el => el.classList.add("hidden"));

    const cartData = await fetchCart();
    checkAndToggleCheckoutButtons(cartData);

    cartPage.querySelector("table.cart-items")?.classList.remove("hidden");
    cartPage.querySelector(".skeleton-shimmer")?.classList.add("hidden");
    cartPage.querySelector(".aasaved-cart-actions")?.classList.remove("hidden");

    const cleanUrl = window.location.origin + window.location.pathname;
    window.history.replaceState({}, document.title, cleanUrl);
  };

  function checkAndToggleCheckoutButtons(cart) {
    if (!cart) return;
    const approvalRequired = cart.total_price >= window.draftorder_threshold;
    const checkoutBtns = document.querySelectorAll('button[name="checkout"]');

    checkoutBtns.forEach(btn => {
      if (approvalRequired) {
        btn.classList.add("hidden");
        document.querySelectorAll("#create-draft-order").forEach(el => el.classList.remove("hidden"));
      } else {
        btn.classList.remove("hidden");
        document.querySelectorAll("#create-draft-order").forEach(el => el.classList.add("hidden"));
      }
    });
  }

  document.addEventListener("click", e => {
    if (!e.target.classList.contains("cart-edit-tier-price-btn")) return;

    const button = e.target;
    const line = button.dataset.line;
    const input = document.querySelector(`.cart-tier-price-input[data-line="${line}"]`);
    const text = document.querySelector(`.cart-tier-price-text[data-line="${line}"]`);
    if (!input || !text) return;

    const original = input.value;
    text.style.display = "none";
    input.style.display = "inline-block";
    input.focus();

    let errorSpan = document.querySelector(`.cart-tier-price-error[data-line="${line}"]`);
    if (!errorSpan) {
      errorSpan = document.createElement("span");
      errorSpan.className = "cart-tier-price-error";
      errorSpan.dataset.line = line;
      Object.assign(errorSpan.style, { color: "red", fontSize: "12px", marginLeft: "8px" });
      input.closest("tr.cart-item").after(errorSpan);
    }

    const handleBlur = async () => {
      input.removeEventListener("blur", handleBlur);

      let newPrice = parseFloat(input.value);
      if (isNaN(newPrice) || newPrice < 80) {
        errorSpan.textContent = "Enter a price above $80";
        input.value = original;
      } else {
        errorSpan.textContent = "";
        newPrice = newPrice.toFixed(2);
        const cart = await fetchCart();
        const lineItem = cart.items[parseInt(line)];
        if (lineItem) {
          const updatedProps = { ...(lineItem.properties || {}), "_Tier Price": document.body.dataset.symbol + newPrice };
          await fetch("/cart/change.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: lineItem.key, quantity: lineItem.quantity, properties: updatedProps }),
          });
          button.closest(".cart-item").querySelector(".loading__spinner")?.classList.remove("hidden");
          await renderCart();
        }
        text.textContent = document.body.dataset.symbol + newPrice;
      }

      text.style.display = "inline";
      input.style.display = "none";
    };

    input.addEventListener("blur", handleBlur);
  });

  async function applyCartFromUrl() {
    const urlParams = new URLSearchParams(window.location.search);
    const addParams = urlParams.getAll("add");
    const mergeCart = urlParams.has("mergecart");
    if (!addParams.length) return;

    const variantProps = {};
    for (const [key, value] of urlParams.entries()) {
      if (key.startsWith("properties[")) {
        const match = key.match(/properties\[(.*?)\](?:\[(.*?)\])?/);
        if (!match) continue;
        const [ , idOrKey, prop ] = match;
        const propName = prop || idOrKey;
        if (/^\d+$/.test(idOrKey)) {
          const vid = parseInt(idOrKey, 10);
          variantProps[vid] = { ...(variantProps[vid] || {}), [propName]: value };
        } else {
          variantProps._global = { ...(variantProps._global || {}), [idOrKey]: value };
        }
      }
    }

    const lineItems = addParams.map(param => {
      const [variantId, qty] = param.split(":");
      const vid = parseInt(variantId, 10);
      let props = { ...(variantProps._global || {}) };
      if (variantProps[vid]) props = { ...props, ...variantProps[vid] };
      return { id: vid, quantity: parseInt(qty, 10), properties: Object.keys(props).length ? props : undefined };
    });

    try {
      if (!mergeCart) {
        await clearCart();
        await addToCart(lineItems);
      } else {
        for (const item of lineItems) {
          await addToCart([item]);
        }
      }
      await renderCart();
    } catch (err) {
      console.error("Cart update failed:", err);
    }
  }

  applyCartFromUrl();
});
</script>
